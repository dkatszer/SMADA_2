colors <- c("RED", "GREAN", "BLUE", "WHITE")
is.factor(colors)
colros <- factor(colors)
colors <- factor(colors)
is.factor(colors)
pattern <- sample(colors, 500, replace = TRUE, prob = c(0.33, 0.33, 0.33))
pattern <- sample(colors, 500, replace = TRUE, prob = c(0.3, 0.3, 0.3))
pattern <- sample(colors, 500, replace = TRUE, prob = c(0.25, 0.25, 0.25, 0.25))
pattern1 <- pattern.frame
pattern1 <- data.frame(pattern)
pattern2 <- as.matrix(pattern)
View(pattern1)
View(pattern2)
View(pattern2)
pattern1
pattern2
as.list(colors)
colors1 <- as.list(colors)
colors
expand.grid(colors,colors1)
data(cars)
cars2 <- cars
cars2
?cars
?ts
cars2$speed <- cars$speed * 1.61 * 1000 / 3600
View(cars2)
cars2$dist <- cars2$dist / 1.61
cars2 <- cars
cars2$speed <- cars$speed / 1.61 * 1000 / 3600
cars2$dist <- cars2$dist / 1.61
plot(cars2)
abline(lm(speed ~ dist))
abline(lm(cars2$speed ~ cars2$dist))
data(cars)
cars2 <- cars
cars2$speed <- cars$speed / 1.61 * 1000 / 3600
cars2$dist <- cars2$dist / 1.61
plot(cars2)
abline(lm(cars2$speed ~ cars2$dist))
data(cars)
cars2 <- cars
cars2$speed <- cars$speed / 1.61 * 1000 / 3600
cars2$dist <- cars2$dist / 1.61 * 1000
plot(cars2)
abline(lm(cars2$speed ~ cars2$dist))
abline(lm(speed ~ dist, cars2))
plot(cars2)
abline(lm(speed ~ dist, cars2))
plot(cars2)
scatter.smooth(x = cars2$speed, y= cars2$dist)
plot(cars2)
abline(lm(speed ~ dist, cars2))
?lm
linmod <- lm(speed ~ dist, cars2)
View(linmod)
summary(linmod)
data(cars)
cars2 <- cars
cars2$speed <- cars$speed / 1.61 * 1000 / 3600
cars2$dist <- cars2$dist / 1.61 * 1000
plot(cars2)
linmod <- lm(speed ~ dist, cars2)
abline(linmod$coefficients, col = "blue")
plot(speed ~ dist)
plot(speed ~ dist, cars2)
linmod <- lm(speed ~ dist, cars2)
abline(linmod$coefficients, col = "blue")
cars2
cars$speed2 <- cars2$speed
cars
cars
age <- c( 13, 15, 16, 16, 19, 20, 20, 21, 22, 22, 25, 25, 25, 25, 30, 33, 33, 35, 35, 35, 35, 36, 40, 45, 46, 52, 70)
min(age)
mode(age)
mean(age)
midrange(age)
midrange(age)
#midrange(age)
mean(age, trim=.2)
#midrange(age)
summary(age)
midrange(age)
fivenum(age)
fivenum(age)
fivenum(age)
?fivenum
box
boxplot(age)
age <- c(23, 23, 27, 27, 39, 41, 47, 49, 50, 52, 54, 54, 56, 57, 58, 58, 60, 61)
fat <- c(9.5, 26.5, 7.8, 17.8, 31.4, 25.9, 27.4, 27.2, 31.2, 34.6, 42.5, 28.8, 33.4, 30.2, 34.1, 32.9, 41.2, 35.7)
data.frame(age~fat)
data.frame(age,fat)
summary(hospital_data$age)
hospital_data <- data.frame(age,fat)
summary(hospital_data$age)
summary(hospital_data$fat)
boxplot(hospital_data$age)
boxplot(hospital_data$fat)
plot(hospital_data$age ~ hospital_data$fat)
coefficients(hospital_data$age ~ hospital_data$fat)
?cor
cor(hospital_data$age, hospital_data$fat)
florist <- read.table("florist.txt", header = T, sep = ",")
setwd("C:/Workspace/AGH/SMADA_2/data_mining/lab2")
florist <- read.table("florist.txt", header = T, sep = ",")
length
roses_by_day <- aggregate(roses$price, by = list(roses$date), FUN = length)
roses <- subset(florist, bouquet == "roses")
roses_by_day <- aggregate(roses$price, by = list(roses$date), FUN = length)
plot(rosers_by_day)
plot(roses_by_day)
names(roses_by_day) <- c("date", "number_of_bouquets")
roses_by_day <- aggregate(roses$price, by = list(roses$date), FUN = length)
names(roses_by_day) <- c("date", "number_of_bouquets")
plot(roses_by_day)
View(roses_by_day)
roses_by_week <- aggregate(roses$price, by = list(roses$week), FUN = length)
View(roses_by_week)
View(roses_by_day)
View(roses_by_day)
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length)
View(roses_by_week)
roses_by_week <- aggregate(roses$year, by = list(roses$year, roses$week), FUN = length)
roses_by_week <- aggregate(roses$year, by = list(roses$year, roses$week), FUN = length)
View(roses_by_week)
roses_by_week <- aggregate(roses$year, by = list(roses$year, roses$week), FUN = length)
roses_by_week <- aggregate(list(roses$year, roses$week), by = list(roses$year, roses$week), FUN = length)
roses_by_week <- aggregate(list(roses$year, roses$week), by = list(roses$year, roses$week), FUN = length)
View(roses_by_week)
View(roses_by_week)
View(roses_by_week)
source('C:/Workspace/AGH/SMADA_2/data_mining/lab2/lab2.R')
View(roses_by_week)
View(roses_by_week)
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length, order(roses$year, decreasing = FALSE))
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length, order(roses$year))
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length, ordered(roses$year))
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length, sort(roses$year))
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length, sort = roses$year)
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length, sort = roses$year)
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week),  sort = roses$year, FUN = length)
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length)
roses_by_week <- order(roses_by_week$year)
roses_by_week <- order(c(roses_by_week$year))
roses_by_week <- roses_by_week[order(roses_by_week$year),]
roses_by_week <- roses_by_week[order(roses_by_week$year)]
roses_by_week <- roses_by_week[order(c(roses_by_week$year))]
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length)[order(year),]
roses_by_week <- aggregate(roses$price, by = list(roses$year, roses$week), FUN = length)[order(roses$year),]
View(roses_by_week)
roses_by_week <- roses_by_week[order(roses_by_week$Group.1),]
View(roses_by_week)
names(roses_by_week) <- c("year","week","total")
roses_by_week <- roses_by_week[order(roses_by_week$year),]
View(roses_by_week)
plot(roses_by_week$total)
plot(roses_by_week$total, line(I))
plot(roses_by_week$total, line(1))
plot(roses_by_week$week ~ roses_by_week$total)
plot( roses_by_week$total ~ roses_by_week$week)
plot( roses_by_week$total ~ roses_by_week$week, type="l")
plot( roses_by_week$total ~ roses_by_week$week, type="l")
binning(roses_by_week$total, 5)
a<-binning(roses_by_week$total, 5)
binning <- function(input_data, bin_size, FUN = mean) {
len <- length(x)
y <- vector()
for (i in 1:len) {
k = i %% bin_size
if(k==0){
k0 <- i - bin_size + 1
}
else{
k0 <- i - k+1
}
k1 <- k0 + bin_size - 1
if(k1>len){
k1<-len
}
y[i] <- FUN(input_data[k0:k1])
}
return(y)
}
a<-binning(roses_by_week$total, 5)
len <- length(input_data)
binning <- function(input_data, bin_size, FUN = mean) {
len <- length(input_data)
y <- vector()
for (i in 1:len) {
k = i %% bin_size
if(k==0){
k0 <- i - bin_size + 1
}
else{
k0 <- i - k+1
}
k1 <- k0 + bin_size - 1
if(k1>len){
k1<-len
}
y[i] <- FUN(input_data[k0:k1])
}
return(y)
}
a<-binning(roses_by_week$total, 5)
smooth(roses_by_week$total, kind = a)
smooth(a)
smooth(roses_by_week$total)
plot(roses_by_week ~a)
plot( a, type="l")
plot( a  ~ roses_by_week$week, type="l")
plot( roses_by_week$total ~ roses_by_week$week, type="l")
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 1)
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 2)
a<-binning(roses_by_week$total, 1000)
a<-binning(roses_by_week$total, 10)
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 6)
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 8)
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 100)
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 20)
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 5)
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 100)
plot( a  ~ roses_by_week$week, type="l")
a<-binning(roses_by_week$total, 5)
plot( a  ~ roses_by_week$week, type="l")
